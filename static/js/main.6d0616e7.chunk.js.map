{"version":3,"sources":["panels/MainPage.js","panels/Persik.js","App.js","index.js","img/persik.png"],"names":["MainPage","id","go","fetchedUser","drawDiagram","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","className","osName","platform","Persik","props","left","IOS","persik","alt","App","useState","activePanel","setActivePanel","setUser","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","GoogleCharts","load","api","visualization","arrayToDataTable","PieChart","getElementById","draw","ReactDOM","render","module","exports"],"mappings":"icA2DeA,G,OA/CE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAGxC,OACA,kBAAC,IAAD,CAAOH,GAAIA,GACV,kBAAC,IAAD,gBACCE,GACD,kBAAC,IAAD,CAAOE,MAAM,oCACZ,kBAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKL,MAAQF,EAAYO,KAAKL,MAAQ,IAEnF,8GAJD,IAIuB,6BAJvB,UAKKF,EAAYQ,WALjB,YAK+BR,EAAYS,aAI5C,kBAAC,IAAD,CAAOP,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASb,EAAIc,UAAQ,SAASC,UAAU,aAApE,2BAID,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQJ,KAAK,KAAMC,MAAM,IAAIC,QAASX,EAAaa,UAAU,aAA7D,sBAID,kBAAC,IAAD,CAAKA,UAAU,gB,4EC5BZC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOpB,GAAIoB,EAAMpB,IAChB,kBAAC,IAAD,CACCqB,KAAM,kBAAC,IAAD,CAAmBP,QAASM,EAAMnB,GAAIc,UAAQ,QAClDE,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKN,UAAU,SAAST,IAAKgB,IAAQC,IAAI,qBCiC5BC,EA7CH,WAAO,IAAD,EACqBC,mBAAS,YAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVxB,EAFU,KAEG2B,EAFH,KAIjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECL,EAAQK,GAFT,4CARe,sBACfF,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAYfQ,KAEE,IAEH,IAAM9C,EAAK,SAAA+C,GACVpB,EAAeoB,EAAEC,cAAcC,QAAQC,KAGxCC,IAAaC,KAAKlD,GAClB,IAAMA,EAAc,WAEjB,IAAMmC,EAAOc,IAAaE,IAAIC,cAAcC,iBAAiB,CACzD,CAAC,cAAe,gBAChB,CAAC,cAAe,IAChB,CAAC,YAAa,IACd,CAAC,WAAY,MAEG,IAAIJ,IAAaE,IAAIC,cAAcE,SAASjB,SAASkB,eAAe,WAC5EC,KAAKrB,IAGpB,OACC,kBAAC,IAAD,CAAMX,YAAaA,GAClB,kBAAC,EAAD,CAAU3B,GAAG,WAAWE,YAAaA,EAAaD,GAAIA,EAAIE,YAAaA,IACvE,kBAAC,EAAD,CAAQH,GAAG,SAASC,GAAIA,MC7C3B+B,IAAOC,KAAK,gBAEZ2B,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASkB,eAAe,U,mBCRjDI,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.6d0616e7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport \"./MainPage.css\";\n\nconst MainPage = ({ id, go, fetchedUser, drawDiagram}) => {\n\n\t// MainPage UI\n\treturn (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t<b>Личный кабинет</b> <br />\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\" className=\"xl-button\">\n\t\t\t\t\tShow me Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\"  level=\"2\" onClick={drawDiagram} className=\"xl-button\">\n\t\t\t\t\tDraw a diagram...\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div className=\"diagram\">\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n)};\n\nMainPage.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n// import Google Charts\nimport {GoogleCharts} from 'google-charts';\n\nimport MainPage from './panels/MainPage';\nimport Persik from './panels/Persik';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('mainPage');\n\tconst [fetchedUser, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tGoogleCharts.load(drawDiagram);\n\tconst drawDiagram = () => {\n\t\t// Standard google charts functionality is available as GoogleCharts.api after load\n    const data = GoogleCharts.api.visualization.arrayToDataTable([\n        ['Chart thing', 'Chart amount'],\n        ['Lorem ipsum', 60],\n        ['Dolor sit', 22],\n        ['Sit amet', 18]\n    ]);\n    const pie_1_chart = new GoogleCharts.api.visualization.PieChart(document.getElementById('chart1'));\n    pie_1_chart.draw(data);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} >\n\t\t\t<MainPage id='mainPage' fetchedUser={fetchedUser} go={go} drawDiagram={drawDiagram}/>\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}