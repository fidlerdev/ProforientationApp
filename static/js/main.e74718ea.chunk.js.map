{"version":3,"sources":["panels/Main.js","panels/Entry.js","panels/Account.js","App.js","index.js","img/Logo 256x256.png"],"names":["Main","id","go","fetchedUser","useState","activeModal","setActiveModal","left","onClick","e","console","log","data-to","title","size","level","className","onClose","icon","header","caption","actions","mode","action","Entry","separator","src","logo_256_256","alt","stretched","Account","before","photo_200","description","city","first_name","last_name","top","type","placeholder","value","App","activePanel","setActivePanel","setUser","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","centered","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e74718ea.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { ModalRoot, ModalCard } from '@vkontakte/vkui';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n// import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon56DoNotDisturbOutline from '@vkontakte/icons/dist/56/do_not_disturb_outline';\nimport Icon28MoreHorizontal from '@vkontakte/icons/dist/28/more_horizontal';\nimport Icon28UserCircleOutline from '@vkontakte/icons/dist/28/user_circle_outline';\n\nimport \"./styles/Main.css\";\nimport { PanelHeaderButton } from '@vkontakte/vkui';\n\nconst Main = ({ id, go, fetchedUser}) => {\n\tconst [activeModal, setActiveModal] = useState(null)\n\n\tconst auth = e => {\n\t\tif (fetchedUser) {\n\t\t\tconsole.log(`FETCHED USER ${fetchedUser}`)\n\t\t\tgo(e)\n\t\t} else {\n\t\t\tsetActiveModal('auth-failed');\n\t\t}\n\t}\n\t// Main page UI\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton>\t\n\t\t\t\t\t\t\t<Icon28UserCircleOutline onClick={auth} data-to='account'/>\n\t\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t>\n\t\t\t\tПрофориентация\n\t\t\t</PanelHeader>\n\n\t\t\t<Group title=\"Navigation Example\">\n\t\t\t\t<Div>\n\t\t\t\t\t<Button size=\"xl\" level=\"4\" onClick={go} data-to=\"persik\" className=\"xl-button\">\n\t\t\t\t\t\tShow me Persik, please\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>\n\t\t\t<ModalRoot activeModal={activeModal} onClose={() => setActiveModal(null)}>\n\t\t\t\t<ModalCard\n\t\t\t\t\tid='auth-failed'\n\t\t\t\t\tonClose={() => setActiveModal(null)}\n\t\t\t\t\ticon={<Icon56DoNotDisturbOutline />}\n\t\t\t\t\theader='Вы не авторизованы'\n\t\t\t\t\tcaption='Произошла ошибка, либо вы не авторизованы в сети ВКонтакте. Попробуйте очистить кэш в меню приложения'\n\t\t\t\t\tactions={[{\n\t\t\t\t\t\t\ttitle: 'Закрыть',\n\t\t\t\t\t\t\tmode: 'primary',\n\t\t\t\t\t\t\taction: () => setActiveModal(null)\n\t\t\t\t\t\t}]}\n\t\t\t\t\t/>\n\t\t\t</ModalRoot>\n\t\t</Panel>\n)};\n\nMain.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Main;\n","import React from 'react';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { Div, Group, Card } from '@vkontakte/vkui';\n\nimport './styles/Entry.css'\n\nimport logo_256_256 from '../img/Logo 256x256.png';\n\n\nconst Entry = ({id, go}) => (\n  <Panel id={id}>\n    <PanelHeader separator={false}/>\n      <img src={logo_256_256} alt='Logo 256x256' className=\"Content\" />\n      <p className=\"Content AppName\">\n        Профориентация\n      </p>\n      <Div className='Content'>\n        <Button\n        size=\"l\"\n        onClick={go}\n        data-to='main'\n        stretched\n        mode=\"primary\"\n        className=\"button\"\n        >\n          Начать\n        </Button>\n      </Div>\n      <a onClick={go} data-to='authorship' className=\"Content link\"><u>Ссылки на источники</u></a>\n  </Panel>\n);\n\nexport default Entry;\n\n\n","\nimport React from 'react';\nimport { Panel, PanelHeader, PanelHeaderBack, Cell, Avatar, Card, FormLayoutGroup, FormLayout, Input, Select } from \"@vkontakte/vkui\"\n\n\n\n\nconst Account = ({id, go, fetchedUser}) => {\n  return (\n    <Panel id={id}>\n      <PanelHeader\n      left={<PanelHeaderBack onClick={go} data-to='main' />}\n      >\n        Профиль\n      </PanelHeader>\n      { fetchedUser &&\n      <Card mode='outline' size='l'>\n        <Cell\n          before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n          description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n        >\n          {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n        </Cell>\n      </Card>}\n      <Card mode='outline' size='l'>\n        <FormLayout>\n          <FormLayoutGroup top='Имя'>\n            <Input type='text' placeholder='Введите имя' id='first_name_input' />\n          </FormLayoutGroup>\n          <FormLayoutGroup top='Фамилия'>\n            <Input type='text' placeholder='Введите фамилию' id='last_name_input' />\n          </FormLayoutGroup>\n          <FormLayoutGroup top='Класс'>\n            <Select placeholder='Выберите класс'>\n              <option value='FORM_5'>5 класс</option>\n              <option value='FORM_6'>6 класс</option>\n              <option value='FORM_7'>7 класс</option>\n              <option value='FORM_8'>8 класс</option>\n              <option value='FORM_9'>9 класс</option>\n              <option value='FORM_10'>10 класс</option>\n              <option value='FORM_11'>11 класс</option>\n            </Select>\n          </FormLayoutGroup>\n        </FormLayout>\n      </Card>\n    </Panel>\n  );\n}\n\n\nexport default Account;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\n// import Google Charts\n// import {GoogleCharts} from 'google-charts';\n\nimport Main from './panels/Main';\nimport Entry from './panels/Entry';\nimport Account from './panels/Account';\nimport { ACTIVE_DELAY } from '@vkontakte/vkui/dist/components/Tappable/Tappable';\n\n// import Persik from './panels/Persik';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('entry');\n\tconst [fetchedUser, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t\t<View activePanel={activePanel}>\n\t\t\t\t<Entry id='entry' go={go} centered={true} />\n\t\t\t\t<Main id='main' go={go} fetchedUser={fetchedUser} />\n\t\t\t\t<Account id='account' go={go} fetchedUser={fetchedUser} />\n\t\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}","module.exports = __webpack_public_path__ + \"static/media/Logo 256x256.d71c7559.png\";"],"sourceRoot":""}