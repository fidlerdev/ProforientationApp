{"version":3,"sources":["panels/Main.js","panels/Entry.js","panels/Account.js","App.js","index.js","img/Logo 256x256.png"],"names":["Main","id","go","fetchedUser","useState","activeModal","setActiveModal","left","onClick","e","console","log","data-to","header","mode","description","level","weight","size","style","width","height","onClose","icon","caption","actions","title","action","Entry","centered","className","separator","visor","src","logo_256_256","alt","marginBottom","stretched","vertical","Account","before","multiline","top","type","placeholder","value","wide","after","App","activePanel","setActivePanel","setUser","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e8a7e799.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { ModalRoot, ModalCard, Card, CardScroll, Header, Caption } from '@vkontakte/vkui';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n// import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon56DoNotDisturbOutline from '@vkontakte/icons/dist/56/do_not_disturb_outline';\nimport Icon28UserCircleOutline from '@vkontakte/icons/dist/28/user_circle_outline';\n\nimport \"./styles/Main.css\";\nimport { PanelHeaderButton } from '@vkontakte/vkui';\n\nconst Main = ({ id, go, fetchedUser}) => {\n\tconst [activeModal, setActiveModal] = useState(null)\n\n\tconst auth = e => {\n\t\t// if (fetchedUser) {\n\t\t// На время разработки!!!\n\t\tif (true) {\n\t\t\tconsole.log(`FETCHED USER ${fetchedUser}`)\n\t\t\tgo(e)\n\t\t} else {\n\t\t\tsetActiveModal('auth-failed');\n\t\t}\n\t}\n\t// Main page UI\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton>\t\n\t\t\t\t\t\t\t<Icon28UserCircleOutline onClick={auth} data-to='account'/>\n\t\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t>\n\t\t\t\tПрофориентация\n\t\t\t</PanelHeader>\n\t\t\t<Div>\n\t\t\t\t<Group\n\t\t\t\t\theader={<Header mode='primary'>Тесты</Header>} \n\t\t\t\t\tdescription={<Caption level='2' weight=\"regular\">\n\t\t\t\t\t\tРезултаты тестов будут отображены в личном кабинете.\n\t\t\t\t\t</Caption>}\n\t\t\t\t>\n\t\t\t\t\t<CardScroll>\n\t\t\t\t\t\t<Card size=\"m\">\n\t\t\t\t\t\t\t<Div style={{ width: 224, height: 96 }}>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card size=\"m\">\n\t\t\t\t\t\t\t<Div style={{ width: 224, height: 96 }}>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t<Card size=\"m\">\n\t\t\t\t\t\t\t<Div style={{ width: 224, height: 96 }}>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardScroll>\n\t\t\t\t</Group>\n\t\t\t</Div>\n\t\t\t<ModalRoot activeModal={activeModal} onClose={() => setActiveModal(null)}>\n\t\t\t\t<ModalCard\n\t\t\t\t\tid='auth-failed'\n\t\t\t\t\tonClose={() => setActiveModal(null)}\n\t\t\t\t\ticon={<Icon56DoNotDisturbOutline />}\n\t\t\t\t\theader='Вы не авторизованы'\n\t\t\t\t\tcaption='Произошла ошибка, либо вы не авторизованы в сети ВКонтакте. Попробуйте очистить кэш в меню приложения'\n\t\t\t\t\tactions={[{\n\t\t\t\t\t\t\ttitle: 'Закрыть',\n\t\t\t\t\t\t\tmode: 'primary',\n\t\t\t\t\t\t\taction: () => setActiveModal(null)\n\t\t\t\t\t\t}]}\n\t\t\t\t\t/>\n\t\t\t</ModalRoot>\n\t\t</Panel>\n)};\n\nMain.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Main;\n","import React from 'react';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { Div, FixedLayout, Title } from '@vkontakte/vkui';\n\nimport './styles/Entry.css'\n\nimport logo_256_256 from '../img/Logo 256x256.png';\n\n\nconst Entry = ({id, go}) => (\n  <Panel id={id} centered>\n    <Div className='Entry'>\n      <PanelHeader separator={false} visor={true} />\n      <img src={logo_256_256} alt='Logo 256x256'/>\n      <Title level=\"1\" weight=\"medium\" style={{ marginBottom: 16 }}>Профориентация</Title>\n\n      <Button\n      size=\"l\"\n      onClick={go}\n      data-to='main'\n      stretched\n      mode=\"primary\"\n      className=\"StartButton\"\n      >\n        Начать\n      </Button>\n      \n    </Div>\n      <FixedLayout vertical=\"bottom\">\n        <p onClick={go} data-to='authorship' id='authorship-link'><u>Ссылки на источники</u></p>\n      </FixedLayout>\n  </Panel>\n);\n\nexport default Entry;\n\n\n","\nimport React, { useState } from 'react';\nimport { Panel, PanelHeader, PanelHeaderBack, Cell,\n          Avatar, Card, FormLayoutGroup, FormLayout,\n          Input, Select, Button, FixedLayout, Separator, Div } from \"@vkontakte/vkui\"\n\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\n\nimport './styles/Account.css';\n\n\nconst Account = ({id, go, fetchedUser}) => {\n\n\n\n  return (\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={go} data-to='main' />} // Возвращение на main-view\n      >\n        Профиль\n      </PanelHeader>\n        {/* { fetchedUser &&\n        <Card mode='outline' size='l' className='Card'>\n          <Cell\n            before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n            description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n          >\n            {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n          </Cell>\n        </Card>} */}\n        {/* НА ВРЕМЯ РАЗРАБОТКИ */}\n        <Div>\n          <Card mode='outline' size='l' className='Card Profile'>\n            <Cell\n              className=\"Profile\"\n              before={<Avatar src='http://placekitten.com/200/200' />}\n              multiline={true}\n              description=\"10 Класс\"\n            >\n              <span id=\"profile-data\">Вениамин Серапутский</span>\n            </Cell>\n          </Card>\n        </Div>\n        {/* НА ВРЕМЯ РАЗРАБОТКИ */}\n        <Div>\n          <Card mode='outline' size='m' className=\"Card\">\n            <FormLayout>\n              <FormLayoutGroup top='Имя'>\n                <Input type='text' placeholder='Введите имя' id='first_name_input' />\n              </FormLayoutGroup>\n              <FormLayoutGroup top='Фамилия'>\n                <Input type='text' placeholder='Введите фамилию' id='last_name_input' />\n              </FormLayoutGroup>\n              <FormLayoutGroup top='Класс'>\n                <Select placeholder='Выберите класс'>\n                  <option value='FORM_5'>5 класс</option>\n                  <option value='FORM_6'>6 класс</option>\n                  <option value='FORM_7'>7 класс</option>\n                  <option value='FORM_8'>8 класс</option>\n                  <option value='FORM_9'>9 класс</option>\n                  <option value='FORM_10'>10 класс</option>\n                  <option value='FORM_11'>11 класс</option>\n                </Select>\n              </FormLayoutGroup>\n              <FormLayoutGroup>\n                <Button\n                size='xl'\n                mode='primary'\n                // onClick={}\n                className='ButtonSave'\n                >\n                  Сохранить изменения \n                </Button>\n              </FormLayoutGroup>\n            </FormLayout>\n          </Card>\n        </Div>\n      \n      <FixedLayout vertical=\"bottom\">\n          <Separator wide />\n            <Div>\n              <Button\n                before={<Icon24Poll />}\n                after={<Icon24Poll />}\n                size='xl'\n                mode='secondary'\n              >\n                Статистика\n              </Button>\n            </Div>\n        </FixedLayout>\n    </Panel>\n  );\n}\n\n// const BottomTab = ({activeTab, setActiveTab, go}) => {\n//   const changePanel = e => {\n//     setActiveTab(activeTab === INFO_TAB ? STAT_TAB : INFO_TAB);\n//     go(e.currentTarget.dataset.to);\n//   }\n  \n//   return(\n//     <FixedLayout vertical=\"bottom\">\n//           <Separator wide />\n//           <Tabs>\n//             <TabsItem\n//               selected={activeTab === INFO_TAB}\n//               onClick={changePanel}\n//               data-to='account'\n//             >\n//               Информация\n//             </TabsItem>\n//             <TabsItem\n//               selected={activeTab === STAT_TAB}\n//               onClick={changePanel}\n//               data-to=\"stats\"\n//             >\n//               Статистика\n//             </TabsItem>\n//           </Tabs>\n//         </FixedLayout>\n// )};\n\n\nexport default Account;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\n// import Google Charts\n// import {GoogleCharts} from 'google-charts';\n\nimport Main from './panels/Main';\nimport Entry from './panels/Entry';\nimport Account from './panels/Account';\n\n\n// import Persik from './panels/Persik';\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('entry');\n\tconst [fetchedUser, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} id='main-view'>\n\t\t\t<Entry id='entry' go={go} centered={true} />\n\t\t\t<Main id='main' go={go} fetchedUser={fetchedUser} />\n\t\t\t<Account id='account' go={go} fetchedUser={fetchedUser} centered={true} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}","module.exports = __webpack_public_path__ + \"static/media/Logo 256x256.d71c7559.png\";"],"sourceRoot":""}